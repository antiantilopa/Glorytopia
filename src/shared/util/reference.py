# WARNING! YOU ARE ENTERING THE HOLY PLACE!
# DO NOT EDIT THIS FILE UNLESS YOU KNOW WHAT YOU ARE DOING!
# EVERY FILE ALTERATIONS WILL BE PUNISHED

from typing import Type, TypeVar, Generic
        
T = TypeVar("T")

class Ref(Generic[T]):
    not_loaded: bool = True

    def __init__(self, cls: Type[T]):
        object.__setattr__(self, "cls", cls)

    def create(self, name: str) -> T:
        object.__setattr__(self, "name", name)
        return self
    
    def __setattr__(self, name, val):
        if self.not_loaded:
            object.__setattr__(self, "not_loaded", False)
            obj = self.cls.get(self.name)
            self.__dict__.update(obj.__dict__)
        self.cls.__setattr__(self, name, val)
            
    def __getattr__(self, name):
        if self.not_loaded:
            object.__setattr__(self, "not_loaded", False)
            obj = self.cls.get(self.name)
            self.__dict__.update(obj.__dict__)
        return self.__dict__[name]
    
    def __eq__(self, value):
        return self.name == value.name
    
    def __ne__(self, value):
        return self.name != value.name
